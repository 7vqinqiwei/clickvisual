version: '3'

networks:
  mogo-net:
    driver: bridge

services:
  nginx:
    image: nginx
    ports:
      - "80:80"
    networks:
      - mogo-net
    volumes:
      - ./data/nginx/html:/usr/share/nginx/html
      - ./data/nginx/conf/nginx.conf:/etc/nginx/nginx.conf
      - ./data/nginx/conf.d:/etc/nginx/conf.d
      - ./data/nginx/logs:/var/log/nginx
    restart: always
  fluent-bit:
    image: fluent/fluent-bit:1.8.12
    networks:
      - mogo-net
    ports:
      - 2020:2020
    environment:
      KAFKA_BROKERS: kafka:9092
    volumes:
      - ./data/fluent-bit/conf:/fluent-bit/etc/
      - ./data/nginx/logs:/var/log/containers
    depends_on:
      - nginx
      - kafka
    links:
      - kafka
  zookeeper:
    image: zookeeper
    ports:
      - 2181:2181
    networks:
      - mogo-net
    volumes:
      - ./data/zookeeper/data:/data
      - ./data/zookeeper/datalog:/datalog
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: bitnami/kafka:2.8.1
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    restart: always
    networks:
      - mogo-net
    volumes:
      - ./data/kafka:/bitnami/kafka
  kafka-manager:
    image: sheepkiller/kafka-manager
    ports:
      - "19000:9000"
    depends_on:
      - kafka
    links:
      - zookeeper
      - kafka
    networks:
      - mogo-net
    environment:
      ZK_HOSTS: zookeeper:2181
      APPLICATION_SECRET: shimo
      KM_ARGS: -Djava.net.preferIPv4Stack=true
  kowl:
    image: rsmnarts/kowl
    ports:
      - "18080:8080"
    depends_on:
      - kafka
    links:
      - zookeeper
      - kafka
    environment:
      KAFKA_BROKERS: kafka:9092
    restart: always
    networks:
      - mogo-net
  mysql:
    image: mysql:5.7.24
    ports:
      - "3307:3307"
    command: [
        '--character-set-server=utf8mb4',
        '--collation-server=utf8mb4_general_ci',
        '--port=3307',
        '--init-file=/data/migration/latest.sql',
    ]
    volumes:
      - ./scripts/migration:/data/migration
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_ROOT_HOST: '%'
    restart: always
    networks:
      - mogo-net
  redis:
    image: redis:5.0.14-alpine
    ports:
      - "6380:6380"
    restart: always
    networks:
      - mogo-net
    command: [ '--port 6380' ]
  clickhouse:
    image: clickhouse/clickhouse-server:latest
    expose:
      - "8123"
      - "9000"
    ports:
      - "8123:8123"
      - "9000:9000"
    environment:
      CLICKHOUSE_USER: user1
      CLICKHOUSE_PASSWORD: pass1
    volumes:
      - ./data/clickhouse/database:/var/lib/clickhouse
      - ./data/clickhouse/logs:/var/log
    restart: always
    networks:
      - mogo-net
    links:
      - kafka
    depends_on:
      - kafka
  api:
    image: sevennt/mogo
    expose:
      - "9001"
    ports:
      - "9001:9001"
    depends_on:
      - mysql
      - redis
      - clickhouse
      - fluent-bit
      - kafka
    networks:
      - mogo-net
    links:
      - mysql
      - redis
      - clickhouse
      - kafka
    restart: always
    environment:
      EGO_CONFIG_PATH: /mogo/config/docker.toml
      EGO_LOG_WRITER: stderr
    volumes:
      - ./api/config:/mogo/config
    command: ['/bin/sh', '-c', './bin/mogo -job install && ./bin/mogo']
